{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet MyFormComponent = class MyFormComponent {\n  constructor(http, fb) {\n    this.http = http;\n    this.fb = fb;\n    this.myForm = this.fb.group({});\n  }\n  ngOnInit() {\n    this.http.get('/assets/my-form.json').subscribe(data => {\n      this.formData = data;\n      this.createForm(this.formData.controls);\n    });\n  }\n  createForm(controls) {\n    for (const control of controls) {\n      //Validator Logic\n      const validatorsToAdd = [];\n      for (const [key, value] of Object.entries(control.validators)) switch (key) {\n        case 'required':\n          if (value) {\n            validatorsToAdd.push(Validators.required);\n          }\n          break;\n        case 'minLength':\n          validatorsToAdd.push(Validators.minLength(5));\n          break;\n        default:\n          break;\n      }\n      this.myForm.addControl(control.name, this.fb.control(control.value, validatorsToAdd));\n    }\n  }\n  onSubmit() {\n    console.log('Form valid?: ', this.myForm.valid);\n    console.log('Form Values: ', this.myForm.value);\n  }\n};\n__decorate([Input()], MyFormComponent.prototype, \"jsonFormData\", void 0);\nMyFormComponent = __decorate([Component({\n  selector: 'app-my-form',\n  templateUrl: './my-form.component.html',\n  styleUrls: ['./my-form.component.css']\n})], MyFormComponent);\nexport { MyFormComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAUC,KAAK,QAAQ,eAAe;AAExD,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAQ1BC,YAAoBC,IAAgB,EAAUC,EAAe;IAAzC,SAAI,GAAJD,IAAI;IAAsB,OAAE,GAAFC,EAAE;IAFzC,WAAM,GAAc,IAAI,CAACA,EAAE,CAACC,KAAK,CAAC,EAAE,CAAC;EAEoB;EAEhEC,QAAQ;IACN,IAAI,CAACH,IAAI,CACRI,GAAG,CAAC,sBAAsB,CAAC,CAC3BC,SAAS,CAAEC,IAAI,IAAI;MAClB,IAAI,CAACC,QAAQ,GAAGD,IAAI;MACpB,IAAI,CAACE,UAAU,CAAC,IAAI,CAACD,QAAQ,CAACE,QAAQ,CAAC;IACzC,CAAC,CAAC;EACJ;EAEAD,UAAU,CAACC,QAAe;IACxB,KAAK,MAAMC,OAAO,IAAID,QAAQ,EAAE;MAE9B;MACA,MAAME,eAAe,GAAG,EAAE;MAE1B,KAAI,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACL,OAAO,CAACM,UAAU,CAAC,EAC1D,QAAQJ,GAAG;QACT,KAAK,UAAU;UACb,IAAIC,KAAK,EAAE;YACTF,eAAe,CAACM,IAAI,CAACpB,UAAU,CAACqB,QAAQ,CAAC;;UAE3C;QACF,KAAK,WAAW;UACdP,eAAe,CAACM,IAAI,CAACpB,UAAU,CAACsB,SAAS,CAAC,CAAC,CAAC,CAAC;UAC7C;QACF;UACE;MAAM;MAGZ,IAAI,CAACC,MAAM,CAACC,UAAU,CACpBX,OAAO,CAACY,IAAI,EACZ,IAAI,CAACrB,EAAE,CAACS,OAAO,CAACA,OAAO,CAACG,KAAK,EAAEF,eAAe,CAAC,CAAC;;EAEtD;EAEAY,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACL,MAAM,CAACM,KAAK,CAAC;IAC/CF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACL,MAAM,CAACP,KAAK,CAAC;EACjD;CACD;AA/CUc,YAAR/B,KAAK,EAAE,qDAAmB;AAFhBE,eAAe,eAL3BH,SAAS,CAAC;EACTiC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACWhC,eAAe,CAiD3B;SAjDYA,eAAe","names":["Component","Input","Validators","MyFormComponent","constructor","http","fb","group","ngOnInit","get","subscribe","data","formData","createForm","controls","control","validatorsToAdd","key","value","Object","entries","validators","push","required","minLength","myForm","addControl","name","onSubmit","console","log","valid","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\websites\\DynamicControls\\dynamic-controls-app\\src\\app\\my-form\\my-form.component.ts"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-my-form',\n  templateUrl: './my-form.component.html',\n  styleUrls: ['./my-form.component.css'], \n})\nexport class MyFormComponent implements OnInit {\n\n  @Input() jsonFormData: any;\n\n  public formData: any;\n\n  public myForm: FormGroup = this.fb.group({});\n\n  constructor(private http: HttpClient, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.http\n    .get('/assets/my-form.json')\n    .subscribe((data) => {\n      this.formData = data;\n      this.createForm(this.formData.controls);\n    });\n  }\n\n  createForm(controls: any[]) {\n    for (const control of controls) {\n\n      //Validator Logic\n      const validatorsToAdd = [];\n\n      for(const [key, value] of Object.entries(control.validators))\n        switch (key) {\n          case 'required': \n            if (value) {\n              validatorsToAdd.push(Validators.required);\n            }\n            break;\n          case 'minLength':\n            validatorsToAdd.push(Validators.minLength(5));\n            break;\n          default:\n            break;\n        }\n\n      this.myForm.addControl(\n        control.name, \n        this.fb.control(control.value, validatorsToAdd));\n    }\n  }\n\n  onSubmit() {\n    console.log('Form valid?: ', this.myForm.valid);\n    console.log('Form Values: ', this.myForm.value);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}